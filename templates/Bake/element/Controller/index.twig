{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}

    /**
     * Index method
     *
     * @return \Cake\Http\Response|void
     */
    public function index()
    {
        /** @var \Cake\Http\Response $response */
        $response = $this->applyPrg($this->request, $this->response);
        if ($response instanceof ResponseInterface) {
            return $response;
        }

{% set belongsTo = Bake.aliasExtractor(modelObj, 'BelongsTo') %}
        ${{ pluralName }} = $this->{{ currentModelName }}
{% if belongsTo %}
            ->find()
            ->contain([{{ Bake.stringifyList(belongsTo, {'indent': false})|raw }}]);
{% else %}
            ->find();
{% endif %}

        if ($search = $this->request->getQuery('search')) {
            ${{ pluralName }}->where(function (QueryExpression $exp) use ($search) {
                return $exp->like('{{ currentModelName }}.{{ modelObj.getDisplayField() }}', "%{$search}%");
            });
        }

        ${{ pluralName }} = $this->paginate(${{ pluralName }});

        $this->set(compact('{{ pluralName }}'));
    }
